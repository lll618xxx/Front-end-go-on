(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{468:function(t,e,i){"use strict";i.r(e);var a=i(27),_=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"_1-什么是git"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是git"}},[t._v("#")]),t._v(" 1.什么是Git")]),t._v(" "),e("p",[t._v("Git是一个分布式版本控制系统，用于跟踪文件更改并协调多人协作开发项目。")]),t._v(" "),e("h2",{attrs:{id:"_2-git的主要特点"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-git的主要特点"}},[t._v("#")]),t._v(" 2.Git的主要特点")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("分布式系统")]),t._v("：每个开发者都有完整的代码仓库副本")]),t._v(" "),e("li",[e("strong",[t._v("高效性能")]),t._v("：大多数操作在本地完成，速度快")]),t._v(" "),e("li",[e("strong",[t._v("数据完整性")]),t._v("：使用SHA-1哈希确保数据不被篡改")]),t._v(" "),e("li",[e("strong",[t._v("分支模型")]),t._v("：轻量级分支使得分支操作非常高效")]),t._v(" "),e("li",[e("strong",[t._v("暂存区")]),t._v("：允许选择性提交文件的部分更改")])]),t._v(" "),e("h2",{attrs:{id:"_3-git-vs-svn-集中式版本控制系统"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-git-vs-svn-集中式版本控制系统"}},[t._v("#")]),t._v(" 3.Git vs SVN (集中式版本控制系统)")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("特性")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("Git")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("SVN")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("架构")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("分布式")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("集中式")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("速度")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("快(本地操作)")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("慢(网络依赖)")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("分支")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("轻量级")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("重量级")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("离线工作")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("支持")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("不支持")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("存储方式")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("快照")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("差异")])])])]),t._v(" "),e("h2",{attrs:{id:"_4-git核心概念"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-git核心概念"}},[t._v("#")]),t._v(" 4.Git核心概念")]),t._v(" "),e("ul",[e("li",[e("ol",[e("li",[t._v("Git工作流程")])]),t._v(" "),e("ul",[e("li",[t._v("工作目录(Working Directory)：本地文件系统")]),t._v(" "),e("li",[t._v("暂存区(Staging Area/Index)：准备提交的更改")]),t._v(" "),e("li",[t._v("本地仓库(Local Repository)：提交历史")]),t._v(" "),e("li",[t._v("远程仓库(Remote Repository)：共享的中央仓库")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"2"}},[e("li",[t._v("Git对象模型")])]),t._v(" "),e("ul",[e("li",[t._v("Blob：存储文件内容")]),t._v(" "),e("li",[t._v("Tree：存储目录结构和文件名")]),t._v(" "),e("li",[t._v("Commit：存储提交信息、作者、时间等")]),t._v(" "),e("li",[t._v("Tag：为特定提交打标签")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"3"}},[e("li",[t._v("Git引用")])]),t._v(" "),e("ul",[e("li",[t._v("HEAD：当前所在的分支或提交")]),t._v(" "),e("li",[t._v("分支(Branch)：指向特定提交的可变指针")]),t._v(" "),e("li",[t._v("标签(Tag)：指向特定提交的不可变指针")])])])]),t._v(" "),e("h2",{attrs:{id:"_5-git-add、git-commit和git-push的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-git-add、git-commit和git-push的区别"}},[t._v("#")]),t._v(" 5.git add、git commit和git push的区别")]),t._v(" "),e("p",[e("code",[t._v("git add")]),t._v(" 将工作目录的更改添加到暂存区"),e("br"),t._v(" "),e("code",[t._v("git commit")]),t._v(" 将暂存区的更改记录到本地仓库"),e("br"),t._v(" "),e("code",[t._v("git push")]),t._v(" 将本地仓库的更改推送到远程仓库")]),t._v(" "),e("h2",{attrs:{id:"_6-merge和rebase的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-merge和rebase的区别"}},[t._v("#")]),t._v(" 6.merge和rebase的区别")]),t._v(" "),e("p",[e("code",[t._v("merge")]),t._v("：保留历史，创建新的合并提交"),e("br"),t._v(" "),e("code",[t._v("rebase")]),t._v("：重写历史，将更改应用到目标分支最新提交之后"),e("br"),t._v(" "),e("code",[t._v("merge")]),t._v("更安全，"),e("code",[t._v("rebase")]),t._v("能创建更线性的历史")]),t._v(" "),e("h2",{attrs:{id:"_7-什么是-gitignore文件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-什么是-gitignore文件"}},[t._v("#")]),t._v(" 7.什么是.gitignore文件？")]),t._v(" "),e("p",[t._v("指定Git应忽略的文件和目录模式"),e("br"),t._v("\n常用于忽略日志、临时文件、依赖目录等")]),t._v(" "),e("h2",{attrs:{id:"_8-什么是git钩子-git-hooks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-什么是git钩子-git-hooks"}},[t._v("#")]),t._v(" 8.什么是Git钩子(git hooks)？")]),t._v(" "),e("ul",[e("li",[t._v("在特定Git操作前后自动执行的脚本")]),t._v(" "),e("li",[t._v("存储在.git/hooks目录中")]),t._v(" "),e("li",[t._v("常用钩子："),e("code",[t._v("pre-commit")]),t._v(", "),e("code",[t._v("post-commit")]),t._v(", "),e("code",[t._v("pre-push")]),t._v("等")])]),t._v(" "),e("h2",{attrs:{id:"_9-分支命名规范"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-分支命名规范"}},[t._v("#")]),t._v(" 9.分支命名规范")]),t._v(" "),e("ul",[e("li",[e("ol",[e("li",[t._v("功能分支（Feature Branches）")])]),t._v(" "),e("ul",[e("li",[t._v("格式：feature/<开发者>-<功能描述> 或 feat/<功能名>")]),t._v(" "),e("li",[t._v("示例：feature/john-user-auth、feat/payment-gateway\n适用场景：开发新功能时从 develop 或 main 分支创建，开发完成后合并回主分支。")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"2"}},[e("li",[t._v("修复分支（Fix/Bugfix Branches）")])]),t._v(" "),e("ul",[e("li",[t._v("格式：fix/<问题描述> 或 bugfix/"),e("code",[t._v("<issue-id>")])]),t._v(" "),e("li",[t._v("示例：fix/login-error、bugfix/issue-123\n适用场景：修复线上或测试环境发现的 Bug，完成后合并回 develop 或 main。")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"3"}},[e("li",[t._v("发布分支（Release Branches）")])]),t._v(" "),e("ul",[e("li",[t._v("格式：release/<版本号> 或 release-"),e("code",[t._v("<YYYYMMDD>")])]),t._v(" "),e("li",[t._v("示例：release/v1.2.0、release-20240504\n适用场景：用于版本发布前的最后测试和修复，最终合并到 main 并打 Tag。")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"4"}},[e("li",[t._v("热修复分支（Hotfix Branches）")])]),t._v(" "),e("ul",[e("li",[t._v("格式：hotfix/<问题描述> 或 hotfix-"),e("code",[t._v("<issue-id>")])]),t._v(" "),e("li",[t._v("示例：hotfix/db-connection-fail、hotfix-issue-456\n适用场景：紧急修复生产环境 Bug，从 main 创建，修复后合并回 main 和 develop。")])])])]),t._v(" "),e("h2",{attrs:{id:"_10-多人协作最佳实践"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10-多人协作最佳实践"}},[t._v("#")]),t._v(" 10.多人协作最佳实践")]),t._v(" "),e("ul",[e("li",[e("ol",[e("li",[t._v("定期同步主分支：")])]),t._v(" "),e("ul",[e("li",[t._v("每天开始开发前，先 git pull --rebase 更新本地代码。")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"2"}},[e("li",[t._v("小步提交，频繁合并：")])]),t._v(" "),e("ul",[e("li",[t._v("避免长时间不合并，减少冲突概率。")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"3"}},[e("li",[t._v("使用 Pull Request（PR）/ Merge Request（MR）：")])]),t._v(" "),e("ul",[e("li",[t._v("在 GitHub/GitLab 上发起 PR，进行 Code Review 后再合并。")])])]),t._v(" "),e("li",[e("ol",{attrs:{start:"4"}},[e("li",[t._v("删除已合并的分支：")])]),t._v(" "),e("ul",[e("li",[t._v("避免分支堆积，保持仓库整洁：")])])])]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" branch "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" feature/login  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除本地分支")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin "),e("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--delete")]),t._v(" feature/login  "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 删除远程分支")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("ul",[e("li",[e("ol",{attrs:{start:"5"}},[e("li",[t._v("避免直接 Push 到 main/develop：")])]),t._v(" "),e("ul",[e("li",[t._v("强制通过 PR/MR 合并，确保代码质量。")])])])]),t._v(" "),e("h2",{attrs:{id:"_11-git-pull-vs-git-merge"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_11-git-pull-vs-git-merge"}},[t._v("#")]),t._v(" 11.git pull vs git merge")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("特性")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("git pull")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("git merge")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("本质")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("git fetch（下载远程最新代码） + git merge（合并到当前分支） 的组合命令")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("单纯合并分支")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("使用场景")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("从远程仓库同步最新代码")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("合并任意两个分支（本地或远程）")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("是否涉及远程")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("必须指定远程分支")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("可合并本地分支")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("默认行为")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("自动合并（相当于 git merge）")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("需手动指定目标分支")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("冲突处理")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("直接在当前工作区触发冲突")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("需先切换到目标分支再合并")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("历史记录")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("可能产生合并提交（Merge Commit）")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("同上")])])])])])}),[],!1,null,null,null);e.default=_.exports}}]);