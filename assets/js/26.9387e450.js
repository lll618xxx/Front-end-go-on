(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{286:function(t,a,s){t.exports=s.p+"assets/img/tree.094b673a.png"},371:function(t,a,s){"use strict";s.r(a);var e=s(13),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"_1-doctype-作用-标准模式与兼容模式各有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-doctype-作用-标准模式与兼容模式各有什么区别"}},[t._v("#")]),t._v(" 1. Doctype 作用 标准模式与兼容模式各有什么区别")]),t._v(" "),a("ul",[a("li",[t._v("\n<!DOCTYPE>声明位于HTML文档中的第一行，处于html标签之前。告知浏览器的解析器用什么文档标准解析这个文档。DOCTYPE不存在或格式不正确会导致文档以兼容模式呈现\n")]),t._v(" "),a("li",[a("p",[t._v("标准模式的排版 和 JS 运作模式都是以该浏览器支持的最高标准运行。在兼容模式中，页面以宽松的向后兼容的方式显示,模拟老式浏览器的行为以防止站点无法工作")])])]),t._v(" "),a("h2",{attrs:{id:"_2-html5-为什么只需要写-doctype-html"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-html5-为什么只需要写-doctype-html"}},[t._v("#")]),t._v(" 2. HTML5 为什么只需要写 "),a("code",[t._v("<!DOCTYPE HTML>")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("HTML5 不基于 SGML，因此不需要对 DTD 进行引用，但是需要 doctype 来规范浏览器的行为（让浏览器按照它们应该的方式来运行）")])]),t._v(" "),a("li",[a("p",[t._v("而 HTML4.01 基于 SGML,所以需要对 DTD 进行引用，才能告知浏览器文档所使用的文档类型")])])]),t._v(" "),a("p",[a("strong",[t._v("HTML4写法")])]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("html")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("xmlns")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("http://www.w3.org/1999/xhtml"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("lang")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("zh-CN"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("strong",[t._v("HTML5写法")])]),t._v(" "),a("div",{staticClass:"language-html line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token doctype"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<!")]),a("span",{pre:!0,attrs:{class:"token doctype-tag"}},[t._v("DOCTYPE")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token name"}},[t._v("html")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"_3-html5-新增了哪些内容或-api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-html5-新增了哪些内容或-api"}},[t._v("#")]),t._v(" 3.HTML5 新增了哪些内容或 API")]),t._v(" "),a("p",[t._v("(1)绘画 canvas"),a("br"),t._v("\n(2)用于媒介回放的 video 和 audio 元素"),a("br"),t._v("\n(3)本地离线存储 localStorage 长期存储数据，浏览器关闭后数据不丢失"),a("br"),t._v("\n(4)sessionStorage 的数据在浏览器关闭后自动删除"),a("br"),t._v("\n(5)语意化更好的内容元素，比如 article、footer、header、nav、section"),a("br"),t._v("\n(6)表单控件，calendar、date、time、email、url、search"),a("br"),t._v("\n(7)新增 Geolocation API，可以通过浏览器获取用户的地理位置")]),t._v(" "),a("h2",{attrs:{id:"_4-对浏览器内核的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-对浏览器内核的理解"}},[t._v("#")]),t._v(" 4.对浏览器内核的理解")]),t._v(" "),a("p",[t._v("主要分成两部分：渲染引擎(layout engineer 或 Rendering Engine)和 JS 引擎。")]),t._v(" "),a("p",[t._v("渲染引擎：负责取得网页的内容（HTML、XML、图像等等）、整理讯息（例如加入 CSS 等），以及计算网页的显示方式，然后会输出至显示器或打印机。浏览器的内核的不同对于网页的语法解释会有不同，所以渲染的效果也不相同。所有网页浏览器、电子邮件客户端以及其它需要编辑、显示网络内容的应用程序都需要内核。")]),t._v(" "),a("p",[t._v("JS 引擎：解析和执行 javascript 来实现网页的动态效果。")]),t._v(" "),a("p",[t._v("最开始渲染引擎和 JS 引擎并没有区分的很明确，后来 JS 引擎越来越独立，内核就倾向于只指渲染引擎。")]),t._v(" "),a("h2",{attrs:{id:"_5-对-html-语义化的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-对-html-语义化的理解"}},[t._v("#")]),t._v(" 5.对 HTML 语义化的理解")]),t._v(" "),a("p",[t._v("用正确的标签做正确的事情"),a("br"),t._v("\nhtml 语义化让页面的内容结构化，结构更清晰，便于对浏览器、搜索引擎解析"),a("br"),t._v("\n即使在没有样式 CSS 情况下也以一种文档格式显示，并且是容易阅读的"),a("br"),t._v("\n搜索引擎的爬虫也依赖于 HTML 标记来确定上下文和各个关键字的权重，利于 SEO"),a("br"),t._v("\n使阅读源代码的人对网站更容易将网站分块，便于阅读维护理解")]),t._v(" "),a("h2",{attrs:{id:"_6-浏览器渲染-以及-重绘与回流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-浏览器渲染-以及-重绘与回流"}},[t._v("#")]),t._v(" 6.浏览器渲染 以及 重绘与回流")]),t._v(" "),a("ul",[a("li",[t._v("在讨论重绘和回流之前，先了解浏览器的渲染流程（​​Critical Rendering Path​​）：\n"),a("ul",[a("li",[a("ol",[a("li",[t._v("解析 HTML​​ → 生成 ​​DOM 树​​")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[t._v("​​解析 CSS​​ → 生成 ​​CSSOM 树​​")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"3"}},[a("li",[t._v("​合并 DOM + CSSOM​​ → 生成 ​​渲染树（Render Tree）​​")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"4"}},[a("li",[t._v("​​布局（Layout / Reflow）​​ → 计算元素的位置和大小")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"5"}},[a("li",[t._v("绘制（Paint）​​ → 填充像素（颜色、阴影等）")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"6"}},[a("li",[t._v("​​合成（Composite）​​ → 将各层合并显示（GPU 加速）")])])])])])]),t._v(" "),a("p",[a("img",{staticStyle:{width:"240px"},attrs:{src:s(286)}})]),t._v(" "),a("p",[t._v("​回流（Reflow）发生在 ​步骤 4（Layout）​​，"),a("br"),t._v("\n重绘（Repaint）发生在 ​步骤 5（Paint）​。")]),t._v(" "),a("h4",{attrs:{id:"什么是回流-reflow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是回流-reflow"}},[t._v("#")]),t._v(" 什么是回流（Reflow）？")]),t._v(" "),a("p",[t._v("回流是指浏览器重新计算元素的 "),a("strong",[t._v("​​几何属性​​（位置、大小）")]),t._v(" ，并更新整个或部分​​渲染树的过程")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("​​操作类型​")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("示例​")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("修改元素尺寸​")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("width")]),t._v(", "),a("code",[t._v("height")]),t._v(", "),a("code",[t._v("padding")]),t._v(", "),a("code",[t._v("margin")]),t._v(", "),a("code",[t._v("border")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("修改布局结构​")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("display: none")]),t._v(", "),a("code",[t._v("flex")]),t._v(", "),a("code",[t._v("grid")]),t._v(", "),a("code",[t._v("position")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("​​字体变化")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("font-size")]),t._v(", "),a("code",[t._v("font-family")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("​​内容变化​")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("innerHTML")]),t._v(", "),a("code",[t._v("textContent")])])])])]),t._v(" "),a("h4",{attrs:{id:"什么是重绘-reflow"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是重绘-reflow"}},[t._v("#")]),t._v(" 什么是重绘（Reflow）？")]),t._v(" "),a("p",[t._v("重绘（Repaint）​​ 是指 ​"),a("strong",[t._v("​不影响布局")]),t._v("​​ 的样式变化（如颜色、背景、阴影等），浏览器只需重新绘制受影响的部分，​​不涉及重新计算布局​​。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("​​操作类型​")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("示例​")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("​​颜色变化")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("color")]),t._v(", "),a("code",[t._v("background-color")])])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("可见性​")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[a("code",[t._v("visibility: hidden")]),t._v("（不触发回流）")])])])]),t._v(" "),a("p",[a("code",[t._v("display:none")]),t._v("隐藏一个结点会导致 repaint 与 reflow"),a("br"),t._v(" "),a("code",[t._v("visibility:hidden")]),t._v("进行 dom 隐藏仅仅导致 repaint(没有结构性变化，仅仅看不见而已)"),a("br"),t._v("\nReflow 的成本比 Repaint 的成本高得多的多")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[a("strong",[t._v("回流必定会发生重绘，重绘不一定会引发回流。")])])]),t._v(" "),a("h4",{attrs:{id:"如何优化-减少回流和重绘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#如何优化-减少回流和重绘"}},[t._v("#")]),t._v(" 如何优化？减少回流和重绘")]),t._v(" "),a("p",[t._v("（1）避免频繁操作样式，修改 class 最好")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" el "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'box'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nel"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("style"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("cssText "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'width: 100px; height: 200px; margin: 10px;'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 仅 1 次回流")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("（2）使用 DocumentFragment 或虚拟 DOM​")]),t._v(" "),a("p",[a("code",[t._v("DocumentFragment")]),t._v(" 是 DOM 中的一个重要接口，它表示一个轻量级的文档对象，可以存储一组 DOM 节点，但​"),a("strong",[t._v("​不属于主文档树​​​")]),t._v("。\n批量DOM操作必用​​：超过5个节点的插入/修改就应使用")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'list'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" fragment "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createDocumentFragment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" item "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createElement")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'li'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("textContent "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Item ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  fragment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("item"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 不会触发回流")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nlist"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("appendChild")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("fragment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 仅 1 次回流")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("p",[t._v("（3）使用 transform 和 opacity 优化动画​")]),t._v(" "),a("ul",[a("li",[t._v("​​transform 和 opacity 不会触发回流和重绘​​，而是直接在 ​​合成层（Composite Layer）​​ 处理（GPU 加速）。")]),t._v(" "),a("li",[t._v("适合做高性能动画（如位移、缩放、淡入淡出）")])]),t._v(" "),a("div",{staticClass:"language-css line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-css"}},[a("code",[a("span",{pre:!0,attrs:{class:"token selector"}},[t._v(".box")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("transform")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("translateX")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("100px"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 不会触发回流 */")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v("opacity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 0.5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/* 不会触发重绘 */")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("（4）避免使用 table 布局")]),t._v(" "),a("h4",{attrs:{id:"浏览器重绘与回流的检测方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器重绘与回流的检测方法"}},[t._v("#")]),t._v(" 浏览器重绘与回流的检测方法")]),t._v(" "),a("p",[a("strong",[t._v("1. Chrome DevTools 的 Performance 面板")])]),t._v(" "),a("ul",[a("li",[a("ol",[a("li",[t._v("打开 Chrome 开发者工具 (F12)")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"2"}},[a("li",[t._v("切换到 ​​Performance​​ 选项卡")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"3"}},[a("li",[t._v("点击录制按钮，执行页面操作")])])]),t._v(" "),a("li",[a("ol",{attrs:{start:"4"}},[a("li",[t._v("停止录制后分析结果：")])]),t._v(" "),a("ul",[a("li",[t._v("​紫色条​​：表示重绘(Repaint)")]),t._v(" "),a("li",[t._v("​绿色条​​：表示布局(Layout/Reflow)")])])])]),t._v(" "),a("h2",{attrs:{id:"_7-canvas-和-svg-的区别是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-canvas-和-svg-的区别是什么"}},[t._v("#")]),t._v(" 7.Canvas 和 SVG 的区别是什么")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("​​维度​")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("​​Canvas​​")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("​​​SVG​​")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("​​本质​")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("像素操作（位图）")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("矢量图形（DOM）")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("​​性能​")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("高频更新、大量图形更优")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("交互复杂、静态图形更优")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("​​开发成本​")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("需手动管理状态")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("直接操作 DOM，更简单")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("​适用场景​")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("游戏、动态可视化")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("图标、地图、交互式图表")])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);